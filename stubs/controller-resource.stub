<?php

declare(strict_types=1);

namespace {{NAMESPACE}}\{{MODULE_NAME}}\Http\Controllers;

use {{NAMESPACE}}\{{MODULE_NAME}}\Models\{{MODEL_NAME}};
use Hypervel\Http\Controllers\Controller;
use Hypervel\Http\Request;

class {{CLASS_NAME}} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        // $resources = {{MODEL_NAME}}::all();
        
        if ({{IS_API}}) {
            return response()->json($resources);
        } else {
            return view('{{MODULE_NAME|lower}}::{{MODEL_NAME|lower}}s.index', compact('resources'));
        }
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        if ({{IS_API}}) {
            // API doesn't need create form
        } else {
            return view('{{MODULE_NAME|lower}}::{{MODEL_NAME|lower}}s.create');
        }
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        // Validate the request
        $validated = $request->validate([
            // Add validation rules here
        ]);

        // Create the resource
        // $resource = {{MODEL_NAME}}::create($validated);

        if ({{IS_API}}) {
            return response()->json([
                'message' => 'Resource created successfully',
                // 'data' => $resource
            ], 201);
        } else {
            return redirect()->route('{{MODEL_NAME|lower}}.index')
                ->with('success', 'Resource created successfully');
        }
    }

    /**
     * Display the specified resource.
     */
    public function show(string $id)
    {
        // $resource = {{MODEL_NAME}}::findOrFail($id);
        
        if ({{IS_API}}) {
            return response()->json($resource);
        } else {
            return view('{{MODULE_NAME|lower}}::{{MODEL_NAME|lower}}s.show', compact('resource'));
        }
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(string $id)
    {
        if ({{IS_API}}) {
            // API doesn't need edit form
        } else {
            // $resource = {{MODEL_NAME}}::findOrFail($id);
            // return view('{{MODULE_NAME|lower}}::{{MODEL_NAME|lower}}s.edit', compact('resource'));
        }
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, string $id)
    {
        // Find the resource
        // $resource = {{MODEL_NAME}}::findOrFail($id);

        // Validate the request
        $validated = $request->validate([
            // Add validation rules here
        ]);

        // Update the resource
        // $resource->update($validated);

        if ({{IS_API}}) {
            return response()->json([
                'message' => 'Resource updated successfully',
                // 'data' => $resource
            ]);
        } else {
            return redirect()->route('{{MODEL_NAME|lower}}.index')
                ->with('success', 'Resource updated successfully');
        }
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(string $id)
    {
        // Find the resource
        // $resource = {{MODEL_NAME}}::findOrFail($id);

        // Delete the resource
        // $resource->delete();

        if ({{IS_API}}) {
            return response()->json([
                'message' => 'Resource deleted successfully'
            ]);
        } else {
            return redirect()->route('{{MODEL_NAME|lower}}.index')
                ->with('success', 'Resource deleted successfully');
        }
    }
}
